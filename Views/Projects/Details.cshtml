@model TelgeProject.Models.ProjectViewModel

@{
    int totalOrders = ViewBag.TotalOrders;
    int currentPage = ViewBag.CurrentPage;
    int pageSize = ViewBag.PageSize;
    int totalPages = (int)Math.Ceiling((double)totalOrders / pageSize);
    string serchquery = ViewBag.SearchTerm;
}

<head>
    <style>

        .dashboard {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            padding: 20px;
        }

        .project-details {
            background: #f3f6ff;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            flex: 0 0 66%; 
        }

        .project-details h1 {
            margin: 0 0 20px;
            font-size: 24px;
            color: #333333;
        }

        .buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .buttons button {
            background: #8CBAFF;
            border: none;
            border-radius: 25px;
            padding: 10px 15px;
            cursor: pointer;
            font-size: 14px;
            color: #000000;
        }

        .buttons button.active {
            background: #ffffff;
            color: #2c662d;
        }

        .info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
        }

        .info div span {
            font-weight: 600;
            color: #333333;
        }

        .info div span:first-child {
            font-weight: 400;
            /*color: #333333;*/
        }

        .stats {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            flex: 0 0 33%; 
        }

        .stat {
            background: #ffffff;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 200px;
            text-align: center;
            position: relative;
        }

        .stat:before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 10px;
            height: 100%;
            border-radius: 15px 0 0 15px;
        }

        .stat.red:before {
            background-color: #ff6b6b;
        }

        .stat.black:before {
            background-color: #000000;
        }

        .stat.blue:before {
            background-color: #82caff;
        }

        .stat.green:before {
            background-color: #69d569;
        }

        .stat-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: flex-start;
            margin-top: 20px;
        }

        .stat-container .stat {
            flex: 0 0 48%; 
        }

        .stat {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 20px;
            border-radius: 8px;
            background-color: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .stat h2 {
            margin: 0;
            font-size: 2rem;
            font-weight: bold;
        }

        .stat p {
            font-size: 1rem;
            color: #555;
        }

        .headinginbutton{
            display: flex;
            gap: 100px;
            margin-bottom: 8px;
        }
    </style>

    @*Table CSS Code*@
    <style>
        .custom-table {
            width: 100%;
            border-collapse: collapse;
        }

            .custom-table th, .custom-table td {
                text-align: center;
                padding: 10px;
                border: 1px solid #ddd;
            }

            .custom-table th {
                background-color: #95a4fc;
                color: #333;
            }

        .status-btn {
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            font-size: 0.875rem;
            color: white;
            background-color: #28a745;
        }

            .status-btn.active {
                background-color: #28a745;
            }

        .action-btn {
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            color: white;
            font-size: 0.875rem;
            cursor: pointer;
            margin-right: 5px;
        }

            .action-btn.edit {
                background-color: #ffc107;
            }

            .action-btn.delete {
                background-color: #dc3545;
            }

        .custom-pagination .page-item .page-link {
            padding: 5px 10px;
            border: 1px solid #ddd;
            margin-left: 2px;
        }

        .custom-pagination .page-item.active .page-link {
            background-color: #007bff;
            color: white;
        }

        .custom-pagination .page-link {
            color: #007bff;
            text-decoration: none;
        }

            .custom-pagination .page-link:hover {
                background-color: #f1f1f1;
            }

        .add-task-btn-nav {
            padding: 10px 20px;
            background-color: #95a4fc;
            height: 32px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            margin-right: 20px;
            margin-left: 12px;
        }
    </style>
    
</head>

<body>
    <div class="dashboard">

        <div class="col-12">
            <div class="row">
               
                <div class="col-lg-8 col-12">
                    <div class="project-details">
                        <div class="headinginbutton">
                            <h1>@Model.ProjectName</h1>
                            <div class="buttons">
                                @*<button class="btn btn-primary"
                                        onclick="location.href='@Url.Action("AddRevisionLogs", "RevisionLogs", new { id = Model.ProjectId })'">
                                    Revision Log
                                </button>*@
                                <button class="btn btn-primary"
                                        onclick="location.href='@Url.Action("RevisionLogs", "RevisionLogs", new { id = Model.ProjectId })'">
                                    Revision Log
                                </button>
                                <button class="btn btn-primary"
                                        onclick="location.href='@Url.Action("UpdateProject", "Projects", new { id = Model.ProjectId })'">
                                    Edit Project
                                </button>
                                <button class="active">Ongoing</button>
                            </div>
                        </div>
                        
                        <div class="info">
                            <div><span>Location</span><span style="margin-left: 70px;">: @Model.Location</span></div>
                            <div><span>Customer Name</span><span style="margin-left: 35px;">: @Model.Customer</span></div>
                            <div><span>Project Manager</span><span style="margin-left: 21px;">: @Model.ProjectManager</span></div>
                            <div><span>Allocated Budget</span><span style="margin-left: 31px;">: ₹ @Model.Budget</span></div>
                            <div><span>Team Lead</span><span style="margin-left: 55px;">: @Model.TeamLeadId</span></div>
                            <div><span>Spent Budget</span><span style="margin-left: 53px;">: ₹ --</span></div>
                            <div><span>Engineers Count</span><span style="margin-left: 20px;">: @Model.EngineerCount</span></div>
                            <div><span>Remaining Budget</span><span style="margin-left: 23px;">: ₹ --</span></div>
                            <div>
                                <span>Start Date</span>
                                <span style="margin-left: 62px;">
                                    : @(DateTime.TryParse(Model.StartDate, out var startDate) ? startDate.ToString("dd-MM-yyyy") : Model.StartDate)
                                </span>
                            </div>
                            <div>
                                <span>Estimate End Date</span>
                                <span style="margin-left: 22px;">
                                    : @(DateTime.TryParse(Model.EstimatedEndDate, out var endDate) ? endDate.ToString("dd-MM-yyyy") : Model.EstimatedEndDate)
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Stats Section -->
                <div class="col-lg-4 col-12">
                    <div class="stats">
                        <!-- First Row - Two Cards -->
                        <div class="row">
                            <div class="col-lg-6 col-12 mb-3">
                                <div class="stat red h-100" style="margin-left: -35px; width: 172px;">
                                    <p>Red flagged Tasks</p>
                                    <h2 style="display: flex;justify-content: space-between;">
                                        <span>00</span>
                                        <img src="~/asset/img/New/black-flags.png" width="30" alt="" style="margin-left: 55px;">
                                    </h2>
                                </div>
                            </div>
                            <div class="col-lg-6 col-12 mb-3">
                                <div class="stat black h-100" style="margin-left: -14px; width: 172px;">
                                    <p>Pending Tasks</p>
                                    <h2 style="display: flex;justify-content: space-between;">
                                        <span>@ViewBag.taskPCount</span>
                                        <img src="~/asset/img/New/black-pending.png" width="30" alt="" style="margin-left: 55px;">
                                    </h2>
                                </div>
                            </div>
                        </div>

                        <!-- Second Row - Two Cards -->
                        <div class="row">
                            <div class="col-lg-6 col-12 mb-3">
                                <div class="stat blue h-100" style="margin-left: -35px; width: 172px;">
                                    <p>Total Tasks</p>
                                    <h2 style="display: flex;justify-content: space-between;">
                                        <span>@ViewBag.totalCount</span>
                                        <img src="~/asset/img/New/ongoing.png" width="30" alt="" style="margin-left: 55px;">
                                    </h2>
                                </div>
                            </div>
                            <div class="col-lg-6 col-12 mb-3">
                                <div class="stat green h-100" style="margin-left: -14px; width: 172px;">
                                    <p>Completed Tasks</p>
                                    <h2 style="display: flex;justify-content: space-between;">
                                        <span>00</span>
                                        <img src="~/asset/img/New/black-complete.png" width="30" alt="" style="margin-left: 55px;">
                                    </h2>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</body>

@*<button type="button" class="btn btn-primary" onclick="window.location.href='@Url.Action("AddTask", "TaskSubTasks")'">
    Add Task
</button>*@



@*Start the code*@
<div class="row">
    <div class="col-sm-12 col-md-6" style="padding: 0px 32px;">
        <div class="dataTables_length">
            <label style="font-weight: normal;text-align: left;white-space: nowrap;">
                Show
                <select id="rowQuantity" onchange="updateRowQuantity()" class="custom-select custom-select-sm form-control form-control-sm" style="width: 65px; padding: 0px 9px; display: inline-block; height: 32px;">
                    @if (pageSize == 10)
                    {
                        <option value="10" selected>10</option>
                    }
                    else
                    {
                        <option value="10">10</option>
                    }

                    @if (pageSize == 25)
                    {
                        <option value="25" selected>25</option>
                    }
                    else
                    {
                        <option value="25">25</option>
                    }

                    @if (pageSize == 50)
                    {
                        <option value="50" selected>50</option>
                    }
                    else
                    {
                        <option value="50">50</option>
                    }

                    @if (pageSize == 100)
                    {
                        <option value="100" selected>100</option>
                    }
                    else
                    {
                        <option value="100">100</option>
                    }

                </select>entries
            </label>
        </div>
    </div>
    <div class="col-sm-12 col-md-6">
        <div id="example_filter" class="dataTables_filter" style="text-align: right;">
            <label>Search:<input type="search" id="searchQuery" value="@serchquery" oninput="searchfilterquery();" style="margin-left:.5em;display: inline-block;width: auto;height: 6px;" class="form-control form-control-sm" placeholder="" aria-controls="example"></label>
            @*<a asp-action="AddProject" class="add-task-btn-nav" id="openModalBtn" style="color: #000000;">+ Add New Project</a>*@

            <button type="button" class="btn btn-primary" data-toggle="modal" onclick="window.location.href='@Url.Action("AddTask", "TaskSubTasks", new { projectId = Model.ProjectId })'">
                + Add New Task
            </button>

        </div>
    </div>

</div>

@if (!string.IsNullOrEmpty(serchquery))
{

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        $(document).ready(function () {
            var searchInput = $('#searchQuery');
            searchInput.focus();

            // Set the cursor at the end of the input field
            var val = searchInput.val();
            searchInput.val('').val(val); // Clears and sets the value back to move the cursor to the end
        });
    </script>
}

<div class="product-status mg-b-15">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="product-status-wrap drp-lst" style="padding: 9px 0px 0px 0px;">
                    <div class="asset-inner">
                        <table class="table table-bordered custom-table">
                            <tr>
                                <th>Sr.No</th>
                                <th>Task Name</th>
                                <th>AssignedTo</th>
                                <th>Team Lead</th>
                                <th>Create Date</th>
                                <th>End Date</th>
                                <th>Hours</th>
                                <th>Priority</th>
                                <th>Action</th>
                            </tr>

                            @for (int i = 0; i < Model.Tasks.Count(); i++)
                            {
                                var item = Model.Tasks.ElementAt(i);
                                @*onclick = "location.href='@Url.Action("SubTask", "TaskSubTasks", new { id = item.TaskId })'" style = "cursor:pointer;"*@
                                <tr onclick="navigateToSubTask(@item.TaskId)" style="cursor:pointer;">
                                    <td>@(i + 1)</td>
                                    <td>@item.TaskName</td>
                                    <td>
                                        <select asp-for="@item.AssignedTo"
                                                class="form-control assigned-to-dropdown"
                                                asp-items="@item.AssignedToOptions"
                                                data-task-id="@item.TaskId"
                                                data-project-id="@item.ProjectId" onclick="event.stopPropagation();">

                                        </select>
                                    </td>
                                  

                                    <td>@item.TeamLeadName</td>
                                    <td>@item.StartDateFormatted</td>
                                    <td>@item.EndDateFormatted</td>
                                    <td>@item.EstimatedHours</td>
                                    <td>
                                        <span style="color: @(item.Priority == "High" ? "red" : item.Priority == "Medium" ? "orange" : "green")">
                                            @item.Priority
                                        </span>
                                    </td>

                                    <td>
                                        <a asp-controller="TaskSubTasks" asp-action="UpdateTask" asp-route-id="@item.TaskId" onclick="event.stopPropagation();" style="cursor:pointer; color:black;">
                                            <i class="fa fa-pencil-square-o" aria-hidden="true"></i> edit
                                        </a>
                                    </td>
                                </tr>
                            }


                        </table>
                    </div>
                    <div class="custom-pagination">
                        <div class="col-sm-12 col-md-5">
                            @if (totalOrders > pageSize)
                            {
                                <div class="dataTables_info" id="example_info" role="status" aria-live="polite" style="padding-top: 1rem !important;">
                                    Showing @pageSize of @totalOrders entries
                                </div>
                            }
                            else
                            {
                                <div class="dataTables_info" id="example_info" role="status" aria-live="polite" style="padding-top: 1rem !important;">
                                    Showing @totalOrders of @totalOrders entries
                                </div>
                            }

                        </div>
                        <div class="col-sm-12 col-md-7">
                            <div class="dataTables_paginate paging_simple_numbers" id="MainOrderTable_paginate" style="margin: 0;white-space: nowrap;text-align: right;">
                                <ul class="pagination" style="margin: 2px 0;white-space: nowrap;justify-content: flex-end;">
                                    <li class="paginate_button page-item previous @(currentPage == 1 ? "disabled" : "")">
                                        <a href="@Url.Action("Details", new { pageNumber = currentPage - 1, searchTerm = ViewBag.SearchTerm,pageSize= pageSize })" class="page-link" @(currentPage == 1 ? "tabindex='-1'" : "")>Previous</a>
                                    </li>

                                    @if (totalPages > 5)
                                    {
                                        // Display the first page
                                        if (currentPage > 3)
                                        {
                                            <li class="paginate_button page-item">
                                                <a href="@Url.Action("Details", new { pageNumber = 1, searchTerm = ViewBag.SearchTerm,pageSize= pageSize })" class="page-link">1</a>
                                            </li>
                                            if (currentPage > 4)
                                            {
                                                <li class="paginate_button page-item disabled"><span class="page-link">...</span></li>
                                            }
                                        }

                                        // Display current page and adjacent pages
                                        for (int i = Math.Max(2, currentPage - 2); i <= Math.Min(totalPages - 1, currentPage + 2); i++)
                                        {
                                            if (i == currentPage)
                                            {
                                                <li class="paginate_button page-item active">
                                                    <a href="#" class="page-link" aria-current="page">@i</a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="paginate_button page-item">
                                                    <a href="@Url.Action("Details", new { pageNumber = i, searchTerm = ViewBag.SearchTerm,pageSize= pageSize })" class="page-link">@i</a>
                                                </li>
                                            }
                                        }

                                        // Display the last page
                                        if (currentPage < totalPages - 2)
                                        {
                                            if (currentPage < totalPages - 3)
                                            {
                                                <li class="paginate_button page-item disabled"><span class="page-link">...</span></li>
                                            }
                                            <li class="paginate_button page-item">
                                                <a href="@Url.Action("Details", new { pageNumber = totalPages, searchTerm = ViewBag.SearchTerm,pageSize= pageSize })" class="page-link">@totalPages</a>
                                            </li>
                                        }
                                    }
                                    else
                                    {
                                        // Display all page buttons if total pages are 5 or fewer
                                        for (int i = 1; i <= totalPages; i++)
                                        {
                                            if (i == currentPage)
                                            {
                                                <li class="paginate_button page-item active">
                                                    <a href="#" class="page-link" aria-current="page">@i</a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="paginate_button page-item">
                                                    <a href="@Url.Action("Details", new { pageNumber = i, searchTerm = ViewBag.SearchTerm,pageSize= pageSize })" class="page-link">@i</a>
                                                </li>
                                            }
                                        }
                                    }

                                    <li class="paginate_button page-item next @(currentPage == totalPages ? "disabled" : "")">
                                        <a href="@Url.Action("Details", new { pageNumber = currentPage + 1, searchTerm = ViewBag.SearchTerm,pageSize= pageSize })" class="page-link" @(currentPage == totalPages ? "tabindex='-1'" : "")>Next</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function searchfilterquery() {
        var searchQuery = document.getElementById('searchQuery').value;
        var pageSize = document.getElementById('rowQuantity').value;
        window.location.href = `/Projects/Details?searchTerm=${searchQuery}&pageNumber=1&pageSize=${pageSize}`;
    }

    function updateRowQuantity() {
        var pageSize = document.getElementById('rowQuantity').value;
        var searchQuery = document.getElementById('searchQuery').value;
        window.location.href = `/Projects/Details?searchTerm=${searchQuery}&pageNumber=1&pageSize=${pageSize}`;
    }
</script>


@*Code For Click on Any column to show the sutask Records*@
<script>
    function navigateToSubTask(taskId) {
        window.location.href = `/TaskSubTasks/SubTask?id=${taskId}`;
    }
</script>


<!-- Include jQuery (make sure this is loaded first) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Your custom JavaScript -->
<script>
    jQuery(document).ready(function () {
        jQuery('.assigned-to-dropdown').on('change', function () {
            var selectedUserId = jQuery(this).val();
            var taskId = jQuery(this).data('task-id');
            var projectId = jQuery(this).data('project-id');

            if (selectedUserId && taskId) {
                jQuery.ajax({
                    type: "POST",
                    url: '@Url.Action("UpdateAssignedTo", "Projects")',
                    data: {
                        taskId: taskId,
                        assignedTo: selectedUserId,
                        projectId: projectId
                    },
                    success: function (response) {
                        if (response.success) {
                            //alert('Assigned To updated successfully');
                        } else {
                            alert('Error updating Assigned To');
                        }
                    },
                    error: function () {
                        alert('An error occurred while updating Assigned To');
                    }
                });
            } else {
                alert('Please select a user to assign');
            }
        });
    });
</script>


